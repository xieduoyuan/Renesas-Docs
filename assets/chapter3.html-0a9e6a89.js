import{_ as s,r as a,o as p,c as t,d as e,w as c,b as o,e as i,a as l}from"./app-b1279b80.js";const u={},r=i(`<h1 id="_3-驱动触摸屏-i2c" tabindex="-1"><a class="header-anchor" href="#_3-驱动触摸屏-i2c" aria-hidden="true">#</a> 3. 驱动触摸屏(I2C)</h1><p>本次实验我们在上一次实验的基础上驱动I2C触摸屏。从这次实验开始，我们不需要重新创建工程，而是在上一次实验项目的基础添加新的功能。</p><p>上次实验我们已经能通过使用 printf 函数打印输出信息，这次实验我们的目标是当触摸屏被按下时，打印当前被按下的触摸点的坐标信息(x, y)。</p><blockquote><p>每个实验都是在原有的基础上添加更多的功能，因此请确保每次实验都完成并得到预期的效果。</p></blockquote><h2 id="_3-1-复制工程" tabindex="-1"><a class="header-anchor" href="#_3-1-复制工程" aria-hidden="true">#</a> 3.1 复制工程</h2><p>上次实验得出的工程我们可以通过复制在原有的基础上得到一个新的工程，操作步骤：</p><ol><li>复制工程：</li></ol><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-3/chapter-3_001.png" alt="chapter-3_001" style="zoom:67%;"><ol start="2"><li>粘贴工程</li></ol><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-3/chapter-3_002.png" alt="chapter-3_002" style="zoom:67%;"><ol start="3"><li>复制确认窗口中，重命名项目为 <code>01_dshanmcu_ra6m5_i2c_touchpad</code>，点击 <strong>copy</strong> 按钮：</li></ol><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-3/chapter-3_003.png" alt="chapter-3_003" style="zoom:67%;"><ol start="4"><li>得到重命名后的独立项目</li></ol><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-3/chapter-3_004.png" alt="chapter-3_004" style="zoom:80%;"><ol start="5"><li>为了后续开发的方便(避免混淆)，将之前的项目关闭：</li></ol><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-3/chapter-3_005.png" alt="chapter-3_005" style="zoom:67%;"><ol start="6"><li>关闭后的项目可以随时打开进行操作：</li></ol><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-3/chapter-3_006.png" alt="chapter-3_006" style="zoom:67%;"><h2 id="_3-2-配置fsp" tabindex="-1"><a class="header-anchor" href="#_3-2-配置fsp" aria-hidden="true">#</a> 3.2 配置FSP</h2><h3 id="_3-2-1-查看硬件资料" tabindex="-1"><a class="header-anchor" href="#_3-2-1-查看硬件资料" aria-hidden="true">#</a> 3.2.1 查看硬件资料</h3><ol><li>打开位于 <code>03硬件资料\\1_开发板原理图\\ DshanMCU_RA6M5_V4.0.pdf</code> 的开发板原理图，确认使用哪一个I2C，电路图如下，引脚号是 **P409 (SDA2) ** 和 **P410(SCL2) **，它使用 <strong>SDA2/SCL2</strong> ，记住这个编号 <strong>2</strong>，接下来我们根据这个信息对 r_iic_master 进行配置。</li></ol><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-3/chapter-3_007.png" alt="chapter-3_007" style="zoom:80%;"><ol start="2"><li>打开位于 <code>4_模块资料\\02_GT911触控芯片手册\\GT911 DataSheet Rev11.pdf</code> 的触摸屏数据手册，跳转到如下位置：</li></ol><p><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-3/chapter-3_007-1.png" alt="chapter-3_007-1"></p><p>我们选择使用 <strong>0x28</strong> 也就是 <strong>0x14</strong> 的地址进行通信(我们使用的地址模式是7-bit，因此剔除最低一位，也就是将0x28右移一位的到0x14)。那么在使用iic进行通信之前，需要操作GT911的Reset引脚（P403）和INT引脚（P408），设置（告知）GT911我们想使用的通信地址。</p><blockquote><p>(参考阅读 “1_用户手册\\ARM嵌入式系统中面向对象的模块编程方法.pdf” 6.13 I2C协议章节)</p></blockquote><h3 id="_3-2-2-添加-stacks-r-iic-master" tabindex="-1"><a class="header-anchor" href="#_3-2-2-添加-stacks-r-iic-master" aria-hidden="true">#</a> 3.2.2 添加 Stacks(r_iic_master)</h3><ol><li>打开 FSP Configuration 视图：双击项目文件夹中的 <code>configuration.xml</code> 文件。</li><li>按照下图所示，添加 <code>r_sci_uart</code> 模块：</li></ol><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-3/chapter-3_008.png" alt="chapter-3_008" style="zoom:67%;"><ol start="3"><li>点击刚刚添加的<code>r_iic_master</code> 在底部窗口的 <code>Properties</code> 选项卡中对其进行配置，将其配置为与下图一致： <ul><li>Name： g_i2c_master2</li><li>Channel： 2</li><li>Slave Address： 0x14</li><li>Callback： i2c_master2_callback</li></ul></li></ol><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-3/chapter-3_009.png" alt="chapter-3_009" style="zoom:80%;"><h3 id="_3-2-3-配置-reset-和int引脚" tabindex="-1"><a class="header-anchor" href="#_3-2-3-配置-reset-和int引脚" aria-hidden="true">#</a> 3.2.3 配置 Reset 和INT引脚</h3><p>这2个引脚，在上面的原理图中有标注，分别是：</p><ul><li>Reset引脚 (P403)</li><li>INT引脚 (P408)</li></ul><p>根据上面找到的数据手册的描述，在FSP对其进行配置：</p><ol><li>按下图所示操作，打开配置IO引脚页面：</li></ol><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-3/chapter-3_009-1.png" alt="chapter-3_009-1" style="zoom:80%;"><ol start="2"><li>按下图所示操作，配置Reset引脚(P403)</li></ol><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-3/chapter-3_009-2.png" alt="chapter-3_009-2" style="zoom:80%;"><ol start="3"><li>按下图所示操作，配置INT引脚(P408)</li></ol><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-3/chapter-3_009-3.png" alt="chapter-3_009-3" style="zoom:80%;"><p>最后，检查确认无误，点击右上角的 <code>“Generate Project Content”</code> e2studio就会根据我们对FSP的配置自动配置项目、生成相应的代码。</p><h2 id="_3-3-编写触摸屏驱动代码" tabindex="-1"><a class="header-anchor" href="#_3-3-编写触摸屏驱动代码" aria-hidden="true">#</a> 3.3 编写触摸屏驱动代码</h2><p>在e2studio中打开 <code>01_dshanmcu_ra6m5_i2c_touchpad\\dshanmcu_ra6m5\\drivers</code> 目录，新建如下两个文件 <code>drv_i2c_touchpad.c</code> 和 <code>drv_i2c_touchpad.h</code>：</p><p><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-3/chapter-3_010.png" alt="chapter-3_010"></p><blockquote><p>如果你不清楚怎么在e2studio中创建文件，请参考阅读上一节实验中新建文件的说明教程。</p></blockquote><p>也可以直接在windows资源管理器中找到对应的目录添加文件或目录，这样添加的文件或目录也会自动同步在e2studio的项目列表中</p><p><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-3/chapter-3_011.png" alt="chapter-3_011"></p><p>在e2studio中点击打开 <code>01_dshanmcu_ra6m5_i2c_touchpad\\dshanmcu_ra6m5\\drivers\\drv_i2c_touchpad.c</code> 添加下面的代码：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/***********************************************************************************************************************
 * Includes
 **********************************************************************************************************************/</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;drv_i2c_touchpad.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>

<span class="token comment">/**********************************************************************************************************************
 * Macro definitions
 **********************************************************************************************************************/</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">GT911_RESET_PIN</span>             <span class="token expression">BSP_IO_PORT_04_PIN_03</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">GT911_INT_PIN</span>               <span class="token expression">BSP_IO_PORT_04_PIN_08</span></span>

<span class="token comment">//GT911 部分寄存器定义</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">GT_CTRL_REG</span>                 <span class="token expression"><span class="token number">0x8040</span>  </span><span class="token comment">//GT911控制寄存器</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">GT_CFGS_REG</span>                 <span class="token expression"><span class="token number">0x8047</span>  </span><span class="token comment">//GT911配置起始地址寄存器</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">GT_CHECK_REG</span>                <span class="token expression"><span class="token number">0x80FF</span>  </span><span class="token comment">//GT911校验和寄存器</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">GT_PID_REG</span>                  <span class="token expression"><span class="token number">0x8140</span>  </span><span class="token comment">//GT911产品ID寄存器</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">GT_GSTID_REG</span>                <span class="token expression"><span class="token number">0x814E</span>  </span><span class="token comment">//GT911当前检测到的触摸情况</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">GT_TP1_REG</span>                  <span class="token expression"><span class="token number">0x814F</span>  </span><span class="token comment">//第一个触摸点数据地址</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">GT_TP2_REG</span>                  <span class="token expression"><span class="token number">0x8157</span>  </span><span class="token comment">//第二个触摸点数据地址</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">GT_TP3_REG</span>                  <span class="token expression"><span class="token number">0x815F</span>  </span><span class="token comment">//第三个触摸点数据地址</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">GT_TP4_REG</span>                  <span class="token expression"><span class="token number">0x8167</span>  </span><span class="token comment">//第四个触摸点数据地址</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">GT_TP5_REG</span>                  <span class="token expression"><span class="token number">0x816F</span>  </span><span class="token comment">//第五个触摸点数据地址</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">GT911_READ_X_MAX_REG</span>        <span class="token expression"><span class="token number">0x8048</span>  </span><span class="token comment">/* X输出最大值 */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">GT911_READ_Y_MAX_REG</span>        <span class="token expression"><span class="token number">0x804a</span>  </span><span class="token comment">/* X输出最大值 */</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">GT911_READ_XY_REG</span>           <span class="token expression"><span class="token number">0x814E</span>  </span><span class="token comment">/* 坐标寄存器 */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">GT911_CLEARBUF_REG</span>          <span class="token expression"><span class="token number">0x814E</span>  </span><span class="token comment">/* 清除坐标寄存器 */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">GT911_CONFIG_REG</span>            <span class="token expression"><span class="token number">0x8047</span>  </span><span class="token comment">/* 配置参数寄存器 */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">GT911_COMMAND_REG</span>           <span class="token expression"><span class="token number">0x8040</span>  </span><span class="token comment">/* 实时命令 */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">GT911_PRODUCT_ID_REG</span>        <span class="token expression"><span class="token number">0x8140</span>  </span><span class="token comment">/* productid */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">GT911_VENDOR_ID_REG</span>         <span class="token expression"><span class="token number">0x814A</span>  </span><span class="token comment">/* 当前模组选项信息 */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">GT911_CONFIG_VERSION_REG</span>    <span class="token expression"><span class="token number">0x8047</span>  </span><span class="token comment">/* 配置文件版本号 */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">GT911_CONFIG_CHECKSUM_REG</span>   <span class="token expression"><span class="token number">0x80FF</span>  </span><span class="token comment">/* 配置文件校验码 */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">GT911_FIRMWARE_VERSION_REG</span>  <span class="token expression"><span class="token number">0x8144</span>  </span><span class="token comment">/* 固件版本号 */</span></span>

<span class="token comment">/**********************************************************************************************************************
 * Typedef definitions
 **********************************************************************************************************************/</span>

<span class="token comment">/**用于存放每一个触控点的id，坐标，大小**/</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span>
<span class="token punctuation">{</span>
    <span class="token class-name">uint8_t</span> id<span class="token punctuation">;</span>
    <span class="token class-name">uint16_t</span> x<span class="token punctuation">;</span>
    <span class="token class-name">uint16_t</span> y<span class="token punctuation">;</span>
    <span class="token class-name">uint16_t</span> size<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token class-name">tp_point_info_t</span><span class="token punctuation">;</span>

<span class="token comment">/**类结构体**/</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span>
<span class="token punctuation">{</span>
    <span class="token class-name">uint8_t</span> tp_dev_addr<span class="token punctuation">;</span>
    <span class="token class-name">uint16_t</span> height<span class="token punctuation">;</span>
    <span class="token class-name">uint16_t</span> width<span class="token punctuation">;</span>
    <span class="token class-name">tp_rotation_t</span> rotation<span class="token punctuation">;</span>
    <span class="token class-name">tp_point_info_t</span> points_info<span class="token punctuation">[</span>TOUCH_POINT_TOTAL<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//用于存储五个触控点的坐标</span>
<span class="token punctuation">}</span> <span class="token class-name">tp_drv_t</span><span class="token punctuation">;</span>

<span class="token comment">/***********************************************************************************************************************
 * Private function prototypes
 **********************************************************************************************************************/</span>
<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">i2c2_wait_for_tx</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">i2c2_wait_for_rx</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">static</span> <span class="token class-name">fsp_err_t</span> <span class="token function">gt911_write_reg</span><span class="token punctuation">(</span><span class="token class-name">uint16_t</span> reg<span class="token punctuation">,</span> <span class="token class-name">uint8_t</span> <span class="token operator">*</span>buf<span class="token punctuation">,</span> <span class="token class-name">uint8_t</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token class-name">fsp_err_t</span> <span class="token function">gt911_read_reg</span><span class="token punctuation">(</span><span class="token class-name">uint16_t</span> reg<span class="token punctuation">,</span> <span class="token class-name">uint8_t</span> <span class="token operator">*</span>buf<span class="token punctuation">,</span> <span class="token class-name">uint8_t</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">gt911_clear_buf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">gt911_soft_reset</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">gt911_get_gstid</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token operator">*</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">gt911_get_version</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token operator">*</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">gt911_get_vendor_id</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token operator">*</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">gt911_get_product_id</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token operator">*</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">gt911_get_max_x</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token operator">*</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">gt911_get_max_y</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token operator">*</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/***********************************************************************************************************************
 * Private global variables
 **********************************************************************************************************************/</span>
<span class="token keyword">static</span> <span class="token class-name">tp_drv_t</span> g_tp_drv<span class="token punctuation">;</span>

<span class="token keyword">static</span> <span class="token keyword">volatile</span> bool g_i2c2_tx_complete <span class="token operator">=</span> false<span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token keyword">volatile</span> bool g_i2c2_rx_complete <span class="token operator">=</span> false<span class="token punctuation">;</span>

<span class="token comment">/***********************************************************************************************************************
 * Functions
 **********************************************************************************************************************/</span>

<span class="token class-name">fsp_err_t</span> <span class="token function">drv_i2c_touchpad_init</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">fsp_err_t</span> err<span class="token punctuation">;</span>
    <span class="token class-name">uint8_t</span> buf<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">/* 初始化I2C驱动 */</span>
    err <span class="token operator">=</span> g_i2c_master2<span class="token punctuation">.</span>p_api<span class="token operator">-&gt;</span><span class="token function">open</span> <span class="token punctuation">(</span>g_i2c_master2<span class="token punctuation">.</span>p_ctrl<span class="token punctuation">,</span> g_i2c_master2<span class="token punctuation">.</span>p_cfg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>FSP_SUCCESS <span class="token operator">!=</span> err<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;%s %d\\r\\n&quot;</span><span class="token punctuation">,</span> __FUNCTION__<span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> err<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/* 选择地址 */</span>
    <span class="token comment">// 0x14</span>
    g_ioport<span class="token punctuation">.</span>p_api<span class="token operator">-&gt;</span><span class="token function">pinWrite</span> <span class="token punctuation">(</span>g_ioport<span class="token punctuation">.</span>p_ctrl<span class="token punctuation">,</span> GT911_RESET_PIN<span class="token punctuation">,</span> BSP_IO_LEVEL_LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>
    g_ioport<span class="token punctuation">.</span>p_api<span class="token operator">-&gt;</span><span class="token function">pinWrite</span> <span class="token punctuation">(</span>g_ioport<span class="token punctuation">.</span>p_ctrl<span class="token punctuation">,</span> GT911_INT_PIN<span class="token punctuation">,</span> BSP_IO_LEVEL_HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">R_BSP_SoftwareDelay</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> BSP_DELAY_UNITS_MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>

    g_ioport<span class="token punctuation">.</span>p_api<span class="token operator">-&gt;</span><span class="token function">pinWrite</span> <span class="token punctuation">(</span>g_ioport<span class="token punctuation">.</span>p_ctrl<span class="token punctuation">,</span> GT911_RESET_PIN<span class="token punctuation">,</span> BSP_IO_LEVEL_HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">R_BSP_SoftwareDelay</span> <span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> BSP_DELAY_UNITS_MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>

    g_ioport<span class="token punctuation">.</span>p_api<span class="token operator">-&gt;</span><span class="token function">pinCfg</span> <span class="token punctuation">(</span>g_ioport<span class="token punctuation">.</span>p_ctrl<span class="token punctuation">,</span> GT911_INT_PIN<span class="token punctuation">,</span> IOPORT_CFG_PORT_DIRECTION_INPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">R_BSP_SoftwareDelay</span> <span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> BSP_DELAY_UNITS_MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">touchpad_set_rotation</span> <span class="token punctuation">(</span>TP_ROT_NONE<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">/* 读ID */</span>
    <span class="token comment">// 厂商标识id</span>
    <span class="token function">gt911_get_vendor_id</span> <span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;gt911 vendor id = %02x %02x %02x %02x\\r\\n&quot;</span><span class="token punctuation">,</span> buf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> buf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> buf<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> buf<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 产品id</span>
    <span class="token function">gt911_get_product_id</span> <span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;gt911 product id = %02x %02x %02x %02x\\r\\n&quot;</span><span class="token punctuation">,</span> buf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> buf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> buf<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> buf<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 触摸芯片固件版本</span>
    <span class="token function">gt911_get_version</span> <span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;version = 0x%x\\r\\n&quot;</span><span class="token punctuation">,</span> buf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">gt911_get_max_x</span> <span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
    g_tp_drv<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint16_t</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">|</span> buf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;touchpad max x = %d\\r\\n&quot;</span><span class="token punctuation">,</span> g_tp_drv<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">gt911_get_max_y</span> <span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
    g_tp_drv<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint16_t</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">|</span> buf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;touchpad max y = %d\\r\\n&quot;</span><span class="token punctuation">,</span> g_tp_drv<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name">fsp_err_t</span> <span class="token function">touchpad_is_touched</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">uint8_t</span> touched_state<span class="token punctuation">,</span> touch_num<span class="token punctuation">,</span> buffer_status<span class="token punctuation">;</span>

    <span class="token function">gt911_get_gstid</span> <span class="token punctuation">(</span><span class="token operator">&amp;</span>touched_state<span class="token punctuation">)</span><span class="token punctuation">;</span>
    touch_num <span class="token operator">=</span> touched_state <span class="token operator">&amp;</span> <span class="token number">0xf</span><span class="token punctuation">;</span>            <span class="token comment">//触点数量</span>
    buffer_status <span class="token operator">=</span> <span class="token punctuation">(</span>touched_state <span class="token operator">&gt;&gt;</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">;</span>   <span class="token comment">// 帧状态</span>
    <span class="token comment">//printf(&quot;touch_num: %d\\r\\n&quot;, touch_num);</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>buffer_status <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>touch_num <span class="token operator">&lt;=</span> TOUCH_POINT_TOTAL<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>touch_num <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">uint16_t</span> pointers_regs<span class="token punctuation">[</span>TOUCH_POINT_TOTAL<span class="token punctuation">]</span> <span class="token operator">=</span>
        <span class="token punctuation">{</span> GT_TP1_REG<span class="token punctuation">,</span> GT_TP2_REG<span class="token punctuation">,</span> GT_TP3_REG<span class="token punctuation">,</span> GT_TP4_REG<span class="token punctuation">,</span> GT_TP5_REG <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token comment">// 获取每个触控点的坐标值并保存</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> touch_num<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">uint8_t</span> point_info_per_size <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>
            <span class="token class-name">uint8_t</span> <span class="token operator">*</span>point_info_p <span class="token operator">=</span> <span class="token function">malloc</span> <span class="token punctuation">(</span>point_info_per_size <span class="token operator">*</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">gt911_read_reg</span> <span class="token punctuation">(</span>pointers_regs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> point_info_p<span class="token punctuation">,</span> point_info_per_size<span class="token punctuation">)</span><span class="token punctuation">;</span>

            g_tp_drv<span class="token punctuation">.</span>points_info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">=</span> point_info_p<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            g_tp_drv<span class="token punctuation">.</span>points_info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint16_t</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>point_info_p<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">(</span>point_info_p<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            g_tp_drv<span class="token punctuation">.</span>points_info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint16_t</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>point_info_p<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">(</span>point_info_p<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            g_tp_drv<span class="token punctuation">.</span>points_info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>size <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint16_t</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>point_info_p<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">(</span>point_info_p<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token function">free</span> <span class="token punctuation">(</span>point_info_p<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//旋转方向</span>
            <span class="token class-name">uint16_t</span> temp<span class="token punctuation">;</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>g_tp_drv<span class="token punctuation">.</span>rotation<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">case</span> TP_ROT_NONE<span class="token operator">:</span>
                    g_tp_drv<span class="token punctuation">.</span>points_info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">=</span> g_tp_drv<span class="token punctuation">.</span>width <span class="token operator">-</span> g_tp_drv<span class="token punctuation">.</span>points_info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">;</span>
                    g_tp_drv<span class="token punctuation">.</span>points_info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">=</span> g_tp_drv<span class="token punctuation">.</span>height <span class="token operator">-</span> g_tp_drv<span class="token punctuation">.</span>points_info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> TP_ROT_270<span class="token operator">:</span>
                    temp <span class="token operator">=</span> g_tp_drv<span class="token punctuation">.</span>points_info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">;</span>
                    g_tp_drv<span class="token punctuation">.</span>points_info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">=</span> g_tp_drv<span class="token punctuation">.</span>width <span class="token operator">-</span> g_tp_drv<span class="token punctuation">.</span>points_info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">;</span>
                    g_tp_drv<span class="token punctuation">.</span>points_info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">=</span> temp<span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> TP_ROT_180<span class="token operator">:</span>
                    <span class="token comment">//g_tp_drv.points_info[i].x = g_tp_drv.points_info[i].x;</span>
                    <span class="token comment">//g_tp_drv.points_info[i].y = g_tp_drv.points_info[i].y;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> TP_ROT_90<span class="token operator">:</span>
                    temp <span class="token operator">=</span> g_tp_drv<span class="token punctuation">.</span>points_info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">;</span>
                    g_tp_drv<span class="token punctuation">.</span>points_info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">=</span> g_tp_drv<span class="token punctuation">.</span>points_info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">;</span>
                    g_tp_drv<span class="token punctuation">.</span>points_info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">=</span> g_tp_drv<span class="token punctuation">.</span>height <span class="token operator">-</span> temp<span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">default</span><span class="token operator">:</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token function">gt911_clear_buf</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> FSP_SUCCESS<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//必须给GT911_POINT_INFO缓冲区置0,不然读取的数据一直为128！！！！</span>
    <span class="token function">gt911_clear_buf</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> FSP_ERR_INVALID_DATA<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">touchpad_set_rotation</span><span class="token punctuation">(</span><span class="token class-name">tp_rotation_t</span> rotation<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    g_tp_drv<span class="token punctuation">.</span>rotation <span class="token operator">=</span> rotation<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">touchpad_get_pos</span><span class="token punctuation">(</span><span class="token class-name">uint16_t</span> <span class="token operator">*</span>x<span class="token punctuation">,</span> <span class="token class-name">uint16_t</span> <span class="token operator">*</span>y<span class="token punctuation">,</span> <span class="token keyword">int</span> index<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token operator">*</span>x <span class="token operator">=</span> g_tp_drv<span class="token punctuation">.</span>points_info<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">;</span>
    <span class="token operator">*</span>y <span class="token operator">=</span> g_tp_drv<span class="token punctuation">.</span>points_info<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">i2c_master2_callback</span><span class="token punctuation">(</span><span class="token class-name">i2c_master_callback_args_t</span> <span class="token operator">*</span>p_args<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>p_args<span class="token operator">-&gt;</span>event<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">case</span> I2C_MASTER_EVENT_TX_COMPLETE<span class="token operator">:</span>
        <span class="token punctuation">{</span>
            g_i2c2_tx_complete <span class="token operator">=</span> true<span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">case</span> I2C_MASTER_EVENT_RX_COMPLETE<span class="token operator">:</span>
        <span class="token punctuation">{</span>
            g_i2c2_rx_complete <span class="token operator">=</span> true<span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
        <span class="token punctuation">{</span>
            g_i2c2_tx_complete <span class="token operator">=</span> g_i2c2_rx_complete <span class="token operator">=</span> false<span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/***********************************************************************************************************************
 * Private Functions
 **********************************************************************************************************************/</span>
<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">i2c2_wait_for_tx</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>g_i2c2_tx_complete<span class="token punctuation">)</span>
        <span class="token punctuation">;</span>
    g_i2c2_tx_complete <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">i2c2_wait_for_rx</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>g_i2c2_rx_complete<span class="token punctuation">)</span>
        <span class="token punctuation">;</span>
    g_i2c2_rx_complete <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">gt911_soft_reset</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">uint8_t</span> buf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    buf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x02</span><span class="token punctuation">;</span>
    <span class="token function">gt911_write_reg</span> <span class="token punctuation">(</span>GT911_COMMAND_REG<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token operator">*</span><span class="token punctuation">)</span> buf<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">R_BSP_SoftwareDelay</span> <span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> BSP_DELAY_UNITS_MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
    buf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x0</span><span class="token punctuation">;</span>
    <span class="token function">gt911_write_reg</span> <span class="token punctuation">(</span>GT911_COMMAND_REG<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token operator">*</span><span class="token punctuation">)</span> buf<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">R_BSP_SoftwareDelay</span> <span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> BSP_DELAY_UNITS_MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">gt911_clear_buf</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">uint8_t</span> buf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span>
    <span class="token punctuation">{</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token function">gt911_write_reg</span> <span class="token punctuation">(</span>GT911_CLEARBUF_REG<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token class-name">fsp_err_t</span> <span class="token function">gt911_write_reg</span><span class="token punctuation">(</span><span class="token class-name">uint16_t</span> reg<span class="token punctuation">,</span> <span class="token class-name">uint8_t</span> <span class="token operator">*</span>buf<span class="token punctuation">,</span> <span class="token class-name">uint8_t</span> len<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">fsp_err_t</span> err<span class="token punctuation">;</span>

    <span class="token class-name">uint8_t</span> regl <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>reg <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">uint8_t</span> regh <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>reg <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">uint8_t</span> <span class="token operator">*</span>write_package <span class="token operator">=</span> <span class="token function">malloc</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>len <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">memcpy</span> <span class="token punctuation">(</span>write_package<span class="token punctuation">,</span> <span class="token operator">&amp;</span>regh<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">memcpy</span> <span class="token punctuation">(</span>write_package <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>regl<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">memcpy</span> <span class="token punctuation">(</span>write_package <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">,</span> buf<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>

    err <span class="token operator">=</span> g_i2c_master2<span class="token punctuation">.</span>p_api<span class="token operator">-&gt;</span><span class="token function">write</span> <span class="token punctuation">(</span>g_i2c_master2<span class="token punctuation">.</span>p_ctrl<span class="token punctuation">,</span> write_package<span class="token punctuation">,</span> len <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">i2c2_wait_for_tx</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">free</span> <span class="token punctuation">(</span>write_package<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token class-name">fsp_err_t</span> <span class="token function">gt911_read_reg</span><span class="token punctuation">(</span><span class="token class-name">uint16_t</span> reg<span class="token punctuation">,</span> <span class="token class-name">uint8_t</span> <span class="token operator">*</span>buf<span class="token punctuation">,</span> <span class="token class-name">uint8_t</span> len<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">fsp_err_t</span> err<span class="token punctuation">;</span>
    <span class="token class-name">uint8_t</span> tmpbuf<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    tmpbuf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>reg <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    tmpbuf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>reg <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    err <span class="token operator">=</span> g_i2c_master2<span class="token punctuation">.</span>p_api<span class="token operator">-&gt;</span><span class="token function">write</span> <span class="token punctuation">(</span>g_i2c_master2<span class="token punctuation">.</span>p_ctrl<span class="token punctuation">,</span> tmpbuf<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">i2c2_wait_for_tx</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    err <span class="token operator">=</span> g_i2c_master2<span class="token punctuation">.</span>p_api<span class="token operator">-&gt;</span><span class="token function">read</span> <span class="token punctuation">(</span>g_i2c_master2<span class="token punctuation">.</span>p_ctrl<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> len<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">i2c2_wait_for_rx</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">gt911_get_max_x</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token operator">*</span>buf<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">gt911_read_reg</span> <span class="token punctuation">(</span>GT911_READ_X_MAX_REG<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">gt911_get_max_y</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token operator">*</span>buf<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">gt911_read_reg</span> <span class="token punctuation">(</span>GT911_READ_Y_MAX_REG<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">gt911_get_product_id</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token operator">*</span>buf<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">gt911_read_reg</span> <span class="token punctuation">(</span>GT911_PRODUCT_ID_REG<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">gt911_get_vendor_id</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token operator">*</span>buf<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">gt911_read_reg</span> <span class="token punctuation">(</span>GT911_VENDOR_ID_REG<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">gt911_get_version</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token operator">*</span>buf<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">gt911_read_reg</span> <span class="token punctuation">(</span>GT911_CONFIG_VERSION_REG<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">gt911_get_gstid</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token operator">*</span>buf<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">gt911_read_reg</span> <span class="token punctuation">(</span>GT_GSTID_REG<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在e2studio中点击打开 <code>01_dshanmcu_ra6m5_i2c_touchpad\\dshanmcu_ra6m5\\drivers\\drv_i2c_touchpad.h</code> 添加下面的代码：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">DRV_I2C_TOUCHPAD_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">DRV_I2C_TOUCHPAD_H</span></span>

<span class="token comment">/***********************************************************************************************************************
 * Includes
 **********************************************************************************************************************/</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;hal_data.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>

<span class="token comment">/**********************************************************************************************************************
 * Macro definitions
 **********************************************************************************************************************/</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">TOUCH_POINT_TOTAL</span>           <span class="token expression"><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>     </span><span class="token comment">/* 此芯片最多支持五点触控 */</span></span>

<span class="token comment">/**********************************************************************************************************************
 * Typedef definitions
 **********************************************************************************************************************/</span>
<span class="token keyword">typedef</span> <span class="token keyword">enum</span>
<span class="token punctuation">{</span>
    TP_ROT_NONE <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    TP_ROT_90<span class="token punctuation">,</span>
    TP_ROT_180<span class="token punctuation">,</span>
    TP_ROT_270
<span class="token punctuation">}</span> <span class="token class-name">tp_rotation_t</span><span class="token punctuation">;</span>

<span class="token comment">/***********************************************************************************************************************
 * Exported global variables
 **********************************************************************************************************************/</span>

<span class="token comment">/***********************************************************************************************************************
 * Exported global functions (to be accessed by other files)
 **********************************************************************************************************************/</span>

<span class="token class-name">fsp_err_t</span> <span class="token function">drv_i2c_touchpad_init</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">touchpad_set_rotation</span><span class="token punctuation">(</span><span class="token class-name">tp_rotation_t</span> rotation<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">fsp_err_t</span> <span class="token function">touchpad_is_touched</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">touchpad_get_pos</span><span class="token punctuation">(</span><span class="token class-name">uint16_t</span> <span class="token operator">*</span>x<span class="token punctuation">,</span> <span class="token class-name">uint16_t</span> <span class="token operator">*</span>y<span class="token punctuation">,</span> <span class="token keyword">int</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">/*DRV_I2C_TOUCHPAD_H*/</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-4-编写app" tabindex="-1"><a class="header-anchor" href="#_3-4-编写app" aria-hidden="true">#</a> 3.4 编写app</h2><p>在 <code>01_dshanmcu_ra6m5_i2c_touchpad\\dshanmcu_ra6m5\\applications</code> 目录下新建两个 <code>app_i2c_touchpad_test.c</code> 文件，如下图所示：</p><p><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-3/chapter-3_012.png" alt="chapter-3_012"></p><p>打开 <code>app_i2c_touchpad_test.c</code> 添加如下代码：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/***********************************************************************************************************************
 * Includes
 **********************************************************************************************************************/</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;app.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;drv_uart.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;drv_i2c_touchpad.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>

<span class="token comment">/**********************************************************************************************************************
 * Macro definitions
 **********************************************************************************************************************/</span>


<span class="token comment">/**********************************************************************************************************************
 * Typedef definitions
 **********************************************************************************************************************/</span>


<span class="token comment">/***********************************************************************************************************************
 * Private function prototypes
 **********************************************************************************************************************/</span>
<span class="token keyword">static</span> <span class="token class-name">fsp_err_t</span> <span class="token function">i2c_touchpad_read</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/***********************************************************************************************************************
 * Private global variables
 **********************************************************************************************************************/</span>

<span class="token comment">/***********************************************************************************************************************
 * Functions
 **********************************************************************************************************************/</span>

<span class="token keyword">void</span> <span class="token function">app_i2c_touchpad_test</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">fsp_err_t</span> err<span class="token punctuation">;</span>

    err <span class="token operator">=</span> <span class="token function">drv_uart_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>FSP_SUCCESS <span class="token operator">!=</span> err<span class="token punctuation">)</span> <span class="token function">__BKPT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    err <span class="token operator">=</span> <span class="token function">drv_i2c_touchpad_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>FSP_SUCCESS <span class="token operator">!=</span> err<span class="token punctuation">)</span> <span class="token function">__BKPT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">i2c_touchpad_read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token class-name">fsp_err_t</span> <span class="token function">i2c_touchpad_read</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">fsp_err_t</span> err<span class="token punctuation">;</span>
    <span class="token class-name">uint16_t</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    err <span class="token operator">=</span> <span class="token function">touchpad_is_touched</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>FSP_SUCCESS <span class="token operator">==</span> err<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//循环读取每个触控点的位置值</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> TOUCH_POINT_TOTAL<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token function">touchpad_get_pos</span> <span class="token punctuation">(</span><span class="token operator">&amp;</span>x<span class="token punctuation">,</span> <span class="token operator">&amp;</span>y<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;No: %d, touched x: %d, touched y: %d\\r\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/***********************************************************************************************************************
 * Private Functions
 **********************************************************************************************************************/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将 <code>app.h</code> 改为如下代码：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">APP_TEST_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">APP_TEST_H</span></span>

<span class="token comment">/***********************************************************************************************************************
 * Includes
 **********************************************************************************************************************/</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;hal_data.h&quot;</span></span>

<span class="token comment">/**********************************************************************************************************************
 * Macro definitions
 **********************************************************************************************************************/</span>

<span class="token comment">/**********************************************************************************************************************
 * Typedef definitions
 **********************************************************************************************************************/</span>

<span class="token comment">/***********************************************************************************************************************
 * Exported global variables
 **********************************************************************************************************************/</span>

<span class="token comment">/***********************************************************************************************************************
 * Exported global functions (to be accessed by other files)
 **********************************************************************************************************************/</span>

<span class="token keyword">void</span> <span class="token function">app_uart_test</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">app_i2c_touchpad_test</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">/*APP_TEST_H*/</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-5-调用app" tabindex="-1"><a class="header-anchor" href="#_3-5-调用app" aria-hidden="true">#</a> 3.5 调用app</h2><p>打开 <code>01_dshanmcu_ra6m5_i2c_touchpad\\src\\hal_entry.c</code> ，按照如下步骤进行修改：</p><p>将 <code>hal_entry</code> 函数修改为如下所示的代码：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">hal_entry</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">/* TODO: add your own code here */</span>
    <span class="token comment">//app_uart_test();</span>
    <span class="token function">app_i2c_touchpad_test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">BSP_TZ_SECURE_BUILD</span></span>
    <span class="token comment">/* Enter non-secure code */</span>
    <span class="token function">R_BSP_NonSecureEnter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-6-验证效果" tabindex="-1"><a class="header-anchor" href="#_3-6-验证效果" aria-hidden="true">#</a> 3.6 验证效果</h2><p>点击编译按钮，再点击 debug 按钮，将程序烧写到开发板中。打开串口工具，在e2stduio点击运行代码，会看到串口工具有信息输出，此时触摸屏幕会将所有触摸点的数值打印出来，串口输出现象：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gt911 vendor <span class="token function">id</span> <span class="token operator">=</span> 00 00 00 00
gt911 product <span class="token function">id</span> <span class="token operator">=</span> <span class="token number">39</span> <span class="token number">31</span> <span class="token number">31</span> 00
version <span class="token operator">=</span> 0x7d
touchpad max x <span class="token operator">=</span> <span class="token number">320</span>
touchpad max y <span class="token operator">=</span> <span class="token number">480</span>
No: <span class="token number">0</span>, touched x: <span class="token number">117</span>, touched y: <span class="token number">447</span>
No: <span class="token number">1</span>, touched x: <span class="token number">0</span>, touched y: <span class="token number">0</span>
No: <span class="token number">2</span>, touched x: <span class="token number">0</span>, touched y: <span class="token number">0</span>
No: <span class="token number">3</span>, touched x: <span class="token number">0</span>, touched y: <span class="token number">0</span>
No: <span class="token number">4</span>, touched x: <span class="token number">0</span>, touched y: <span class="token number">0</span>
No: <span class="token number">0</span>, touched x: <span class="token number">117</span>, touched y: <span class="token number">447</span>
No: <span class="token number">1</span>, touched x: <span class="token number">0</span>, touched y: <span class="token number">0</span>
No: <span class="token number">2</span>, touched x: <span class="token number">0</span>, touched y: <span class="token number">0</span>
No: <span class="token number">3</span>, touched x: <span class="token number">0</span>, touched y: <span class="token number">0</span>
No: <span class="token number">4</span>, touched x: <span class="token number">0</span>, touched y: <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,66),k=l("div",{STYLE:"page-break-after: always;"},null,-1);function d(v,m){const n=a("center");return p(),t("div",null,[r,e(n,null,{default:c(()=>[o("本节完")]),_:1}),k])}const b=s(u,[["render",d],["__file","chapter3.html.vue"]]);export{b as default};
