import{_ as s,r as a,o as p,c as t,d as e,w as c,b as o,e as i,a as l}from"./app-b1279b80.js";const u={},k=i(`<h1 id="_4-驱动lcd屏-spi" tabindex="-1"><a class="header-anchor" href="#_4-驱动lcd屏-spi" aria-hidden="true">#</a> 4. 驱动LCD屏(SPI)</h1><p>本次实验我们在上一次实验的基础上驱动 LCD屏(SPI)。</p><p>上次实验我们已经能驱动触摸屏(I2C)并打印触摸点坐标，这次实验我们的目标是点亮LCD屏，向屏幕依次刷写红绿蓝三种不同的颜色，并在串口终端打印当前刷新的颜色文本信息。</p><h2 id="_4-1-复制工程" tabindex="-1"><a class="header-anchor" href="#_4-1-复制工程" aria-hidden="true">#</a> 4.1 复制工程</h2><p>上次实验得出的工程我们可以通过复制在原有的基础上得到一个新的工程。</p><blockquote><p>如果你不清楚复制工程的步骤，请参考阅读第2章实验的步骤教程。</p></blockquote><p>本次实验我们的项目命名为：<strong>02_dshanmcu_ra6m5_spi_display</strong></p><p><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-4/chapter-4_001.png" alt="chapter-4_001"></p><h2 id="_4-2-配置fsp" tabindex="-1"><a class="header-anchor" href="#_4-2-配置fsp" aria-hidden="true">#</a> 4.2 配置FSP</h2><h3 id="_4-2-1-查看硬件资料" tabindex="-1"><a class="header-anchor" href="#_4-2-1-查看硬件资料" aria-hidden="true">#</a> 4.2.1 查看硬件资料</h3><p>打开位于 <code>03硬件资料\\1_开发板原理图\\ DshanMCU_RA6M5_V4.0.pdf</code> 的开发板原理图，确认SPI引脚，电路图如下：</p><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-4/chapter-4_002.png" alt="chapter-4_003" style="zoom:80%;"><p>可以看到原理图并没有像之前那样直接就能确定使用的是哪一路spi，因此需要打开位于 <code>03硬件资料\\5_官方资料\\RA6M5 Group User&#39;s Manual Hardware.pdf</code> 的文档，跳转到下图所示的两个位置，确定使用的是 spi1：</p><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-4/chapter-4_003.png" alt="chapter-4_003" style="zoom:67%;"><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-4/chapter-4_003-0.png" alt="chapter-4_003-0" style="zoom:67%;"><p><code>03硬件资料\\5_官方资料\\RA6M5 Group User&#39;s Manual Hardware.pdf</code> 的文档，跳转到下图所示的位置，确定SPI时钟频率计算公式：</p><p><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-4/chapter-4_003-1.png" alt="chapter-4_003-1"></p><p>打开 e2studio 如下窗口，确定当前的 PCLKA： 由下图可知 PCLKA 为 200MHz，因此可得出支持的SPI最大时钟频率为：<code>100/ (2*(0+1) * 2^0) = 100 / 2 = 50Mbps</code></p><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-4/chapter-4_003-2.png" alt="chapter-4_003-3" style="zoom:67%;"><p>打开位于 <code>4_模块资料\\01_ST7796显示器芯片手册\\ST7796U2_SPEC_V1.0.pdf</code> 的文档，跳转到下图所示的位置：</p><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-4/chapter-4_003-3.png" alt="chapter-4_003-3" style="zoom:67%;"><p>通过换算可得出时钟频率： 1000000000 / 15= 66,666,666.66666667 ≈ 66.5Mhz</p><p>接下来我们根据这些信息对 <code>r_spi</code> 进行配置。</p><h3 id="_4-2-2-添加-stacks-r-spi-master" tabindex="-1"><a class="header-anchor" href="#_4-2-2-添加-stacks-r-spi-master" aria-hidden="true">#</a> 4.2.2 添加 Stacks(r_spi_master)</h3><ol><li>打开 <code>FSP Configuration</code> 视图：双击项目文件夹中的 <code>configuration.xml</code> 文件。</li><li>按照下图所示，添加 <code>r_spi</code> 模块：</li></ol><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-4/chapter-4_004.png" alt="chapter-4_005" style="zoom:67%;"><ol start="3"><li><p>点击刚刚添加的 <code>r_spi</code> 在底部窗口的 <code>Properties</code> 选项卡中对其进行配置，将其配置为与下图一致：</p><ul><li>Name： g_spi1</li><li>Channel： 1</li><li>Callback： spi1_callback</li><li>Bitrate： 50000000</li></ul></li></ol><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-4/chapter-4_005.png" alt="chapter-4_006" style="zoom:80%;"><p>配置完成之后，如果马上编译会发现编译出错、可以根据错误信息进行解决，也可以在编译前参考下图解决：</p><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-4/chapter-4_006.png" alt="chapter-4_007" style="zoom:67%;"><p>点击刚刚添加的 <code>r_dmac</code> 在底部窗口的 <code>Properties</code> 选项卡中对其进行配置，将其配置为与下图一致：</p><ul><li>Name： g_transfer1</li><li>Channel：1</li></ul><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-4/chapter-4_007.png" alt="chapter-4_008" style="zoom:67%;"><h3 id="_4-2-3-配置rs、reset、pwm引脚" tabindex="-1"><a class="header-anchor" href="#_4-2-3-配置rs、reset、pwm引脚" aria-hidden="true">#</a> 4.2.3 配置RS、RESET、PWM引脚</h3><p>这三个引脚，在上面的原理图中有标注，负责的功能分别是：</p><ul><li>RS引脚(P104)：低电平代表发送的是指令，高电平代表发送的是数据</li><li>RESET引脚(P105)：控制LCD屏的复位</li><li>PWM引脚(P608)：可以自由调节背光亮度调节，给高电平常亮</li></ul><p>根据他们负责的功能特性，在FSP对其进行配置：</p><ol><li>按下图所示操作，打开配置IO引脚页面：</li></ol><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-4/chapter-4_008.png" alt="chapter-4_009" style="zoom:67%;"><ol start="2"><li>按下图所示操作，配置RS引脚(P104)</li></ol><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-4/chapter-4_009.png" alt="chapter-4_010" style="zoom:67%;"><ol start="3"><li>按下图所示操作，配置RESET引脚(P105)</li></ol><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-4/chapter-4_010.png" alt="chapter-4_011" style="zoom:67%;"><ol start="4"><li>按下图所示操作，配置PWM引脚(P608)</li></ol><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-4/chapter-4_011.png" alt="chapter-4_012" style="zoom:67%;"><p>最后检查确认无误，点击右上角的 <code>“Generate Project Content”</code> e2studio就会根据我们对FSP的配置自动配置项目、生成相应的代码。</p><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-4/chapter-4_012.png" alt="chapter-4_012" style="zoom:67%;"><h2 id="_4-3-编写lcd驱动代码" tabindex="-1"><a class="header-anchor" href="#_4-3-编写lcd驱动代码" aria-hidden="true">#</a> 4.3 编写LCD驱动代码</h2><p>在e2studio中进入 <code>02_dshanmcu_ra6m5_spi_display\\dshanmcu_ra6m5\\drivers</code> 目录，新建如下两个文件 <code>drv_spi_display.c</code> 和 <code>drv_spi_display.h</code>：</p><p><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-4/chapter-4_013.png" alt="chapter-4_012"></p><p>在e2studio中点击打开 <code>02_dshanmcu_ra6m5_spi_display\\dshanmcu_ra6m5\\drivers\\drv_spi_display.c</code> 添加下面的代码：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/***********************************************************************************************************************
 * Includes
 **********************************************************************************************************************/</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;drv_spi_display.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>

<span class="token comment">/**********************************************************************************************************************
 * Macro definitions
 **********************************************************************************************************************/</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">LCD_DC_PIN</span>              <span class="token expression">BSP_IO_PORT_01_PIN_04</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">LCD_RESET_PIN</span>           <span class="token expression">BSP_IO_PORT_01_PIN_05</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">LCD_PWM_PIN</span>             <span class="token expression">BSP_IO_PORT_06_PIN_08</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">SPI_SEND_DATA</span>           <span class="token expression">BSP_IO_LEVEL_HIGH</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">SPI_SEND_CMD</span>            <span class="token expression">BSP_IO_LEVEL_LOW</span></span>

<span class="token comment">/* ST7796S部分寄存器定义 */</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">LCD_DISPLAY_CMD_RAMCTRL</span>           <span class="token expression"><span class="token number">0xb0</span> </span><span class="token comment">// RAM Control</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">LCD_DISPLAY_CMD_CASET</span>             <span class="token expression"><span class="token number">0x2a</span> </span><span class="token comment">// Column address set</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">LCD_DISPLAY_CMD_RASET</span>             <span class="token expression"><span class="token number">0x2b</span> </span><span class="token comment">// Row address set</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">LCD_DISPLAY_CMD_RAMWR</span>             <span class="token expression"><span class="token number">0x2c</span> </span><span class="token comment">// Memory write</span></span>

<span class="token comment">/**********************************************************************************************************************
 * Typedef definitions
 **********************************************************************************************************************/</span>

<span class="token comment">/***********************************************************************************************************************
 * Private function prototypes
 **********************************************************************************************************************/</span>
<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">spi1_wait_for_tx</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">spi_display_init</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">static</span> <span class="token class-name">fsp_err_t</span> <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token operator">*</span> uc_data<span class="token punctuation">,</span> <span class="token class-name">bsp_io_level_t</span> uc_cmd<span class="token punctuation">,</span> <span class="token class-name">uint32_t</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token class-name">fsp_err_t</span> <span class="token function">spi_display_backlight_opt</span><span class="token punctuation">(</span><span class="token class-name">bsp_io_level_t</span> opt<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token class-name">fsp_err_t</span> <span class="token function">spi_display_reset</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/***********************************************************************************************************************
 * Private global variables
 **********************************************************************************************************************/</span>
<span class="token comment">/* Event flags for master */</span>
<span class="token keyword">static</span> <span class="token keyword">volatile</span> <span class="token class-name">spi_event_t</span> g_master_event_flag<span class="token punctuation">;</span>    <span class="token comment">// Master Transfer Event completion flag</span>

<span class="token comment">/***********************************************************************************************************************
 * Functions
 **********************************************************************************************************************/</span>

<span class="token class-name">fsp_err_t</span> <span class="token function">drv_spi_display_init</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">fsp_err_t</span> err<span class="token punctuation">;</span>

    <span class="token comment">/* 初始化I2C驱动 */</span>
    err <span class="token operator">=</span> g_spi1<span class="token punctuation">.</span>p_api<span class="token operator">-&gt;</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>g_spi1_ctrl<span class="token punctuation">,</span> <span class="token operator">&amp;</span>g_spi1_cfg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>FSP_SUCCESS <span class="token operator">!=</span> err<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;%s %d\\r\\n&quot;</span><span class="token punctuation">,</span> __FUNCTION__<span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> err<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">spi_display_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">spi_display_set_window</span><span class="token punctuation">(</span><span class="token class-name">uint16_t</span> x1<span class="token punctuation">,</span> <span class="token class-name">uint16_t</span> y1<span class="token punctuation">,</span> <span class="token class-name">uint16_t</span> x2<span class="token punctuation">,</span> <span class="token class-name">uint16_t</span> y2<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">uint8_t</span> caset<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token class-name">uint8_t</span> raset<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    caset<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x1 <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>
    caset<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x1 <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    caset<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x2 <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>
    caset<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x2 <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>

    raset<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y1 <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>
    raset<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y1 <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    raset<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y2 <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>
    raset<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y2 <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>LCD_DISPLAY_CMD_CASET<span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Horiz</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span>caset<span class="token punctuation">,</span> SPI_SEND_DATA<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>LCD_DISPLAY_CMD_RASET<span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Vert</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span>raset<span class="token punctuation">,</span> SPI_SEND_DATA<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>LCD_DISPLAY_CMD_RAMWR<span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Memory write</span>
<span class="token punctuation">}</span>

<span class="token class-name">fsp_err_t</span> <span class="token function">drv_spi_display_flush_data</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token operator">*</span> data<span class="token punctuation">,</span> <span class="token class-name">uint32_t</span> len<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">fsp_err_t</span> err<span class="token punctuation">;</span>

    err <span class="token operator">=</span> <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> SPI_SEND_DATA<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>FSP_SUCCESS <span class="token operator">!=</span> err<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;%s %d\\r\\n&quot;</span><span class="token punctuation">,</span> __FUNCTION__<span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> err<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token keyword">void</span> <span class="token function">spi1_callback</span><span class="token punctuation">(</span><span class="token class-name">spi_callback_args_t</span> <span class="token operator">*</span>p_args<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">/* 判断是否是发送完成触发的中断 */</span>
    <span class="token comment">/* 如果是的话就将发送完成标志位置1 */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>SPI_EVENT_TRANSFER_COMPLETE <span class="token operator">==</span> p_args<span class="token operator">-&gt;</span>event<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        g_master_event_flag <span class="token operator">=</span> SPI_EVENT_TRANSFER_COMPLETE<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
        g_master_event_flag <span class="token operator">=</span> SPI_EVENT_TRANSFER_ABORTED<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/***********************************************************************************************************************
 * Private Functions
 **********************************************************************************************************************/</span>
<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">spi1_wait_for_tx</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>g_master_event_flag<span class="token punctuation">)</span><span class="token punctuation">;</span>
    g_master_event_flag <span class="token operator">=</span> false<span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">spi_display_init</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">spi_display_reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_display_backlight_opt</span><span class="token punctuation">(</span>BSP_IO_LEVEL_HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// backlight on</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token number">1</span></span></span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0x11</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// Sleep out</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0x20</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// 关闭显示反转</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0x36</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// 内存数据访问控制设置</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0x48</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_DATA<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 显示方向：左-&gt;右，上-&gt;下(不旋转); BGR</span>

    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0x3a</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// 设置像素格式(bpp)</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0x55</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_DATA<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// RGB接口颜色格式：16bit/pixel；控制接口的颜色格式：16bit/pixel</span>

    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0x13</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// 普通显示模式</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0x29</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// 开启显示</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">elif</span></span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0x11</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0x00</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_DATA<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">R_BSP_SoftwareDelay</span><span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">,</span> BSP_DELAY_UNITS_MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//延时120ms</span>

    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0xf0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0xc3</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_DATA<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0xf0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0x96</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_DATA<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0x36</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0x48</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_DATA<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// RGB</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0xb4</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0x01</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_DATA<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0xb7</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0xc6</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_DATA<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0xe8</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x8A</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x29</span><span class="token punctuation">,</span> <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token number">0xA5</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_DATA<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0xc1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0x06</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_DATA<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0xc2</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0xa7</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_DATA<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0xc5</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0x18</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_DATA<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0xe0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0x09</span><span class="token punctuation">,</span> <span class="token number">0x0B</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x15</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x42</span><span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">,</span> <span class="token number">0x17</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0x1B</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_DATA<span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0xe1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0x09</span><span class="token punctuation">,</span> <span class="token number">0x0B</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x43</span><span class="token punctuation">,</span> <span class="token number">0x42</span><span class="token punctuation">,</span> <span class="token number">0x3B</span><span class="token punctuation">,</span> <span class="token number">0x16</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">,</span> <span class="token number">0x17</span><span class="token punctuation">,</span> <span class="token number">0x1B</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_DATA<span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0xf0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0x3c</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_DATA<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0xf0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0x69</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_DATA<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0x3a</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0x55</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_DATA<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">R_BSP_SoftwareDelay</span><span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">,</span> BSP_DELAY_UNITS_MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//延时120ms</span>

    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0x29</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">/*rotation*/</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0x36</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_CMD<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0x48</span><span class="token punctuation">}</span><span class="token punctuation">,</span> SPI_SEND_DATA<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 0</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token class-name">fsp_err_t</span> <span class="token function">spi_send_data_cmd</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token operator">*</span> uc_data<span class="token punctuation">,</span> <span class="token class-name">bsp_io_level_t</span> uc_cmd<span class="token punctuation">,</span> <span class="token class-name">uint32_t</span> len<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">fsp_err_t</span> err <span class="token operator">=</span> FSP_SUCCESS<span class="token punctuation">;</span>     <span class="token comment">// Error status</span>

    <span class="token comment">/* Master send data to device */</span>
    err <span class="token operator">=</span> g_ioport<span class="token punctuation">.</span>p_api<span class="token operator">-&gt;</span><span class="token function">pinWrite</span><span class="token punctuation">(</span>g_ioport<span class="token punctuation">.</span>p_ctrl<span class="token punctuation">,</span> LCD_DC_PIN<span class="token punctuation">,</span> uc_cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>FSP_SUCCESS <span class="token operator">!=</span> err<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;%s %d\\r\\n&quot;</span><span class="token punctuation">,</span> __FUNCTION__<span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> err<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    err <span class="token operator">=</span> g_spi1<span class="token punctuation">.</span>p_api<span class="token operator">-&gt;</span><span class="token function">write</span><span class="token punctuation">(</span>g_spi1<span class="token punctuation">.</span>p_ctrl<span class="token punctuation">,</span> uc_data<span class="token punctuation">,</span> len<span class="token punctuation">,</span> SPI_BIT_WIDTH_8_BITS<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>FSP_SUCCESS <span class="token operator">!=</span> err<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;%s %d\\r\\n&quot;</span><span class="token punctuation">,</span> __FUNCTION__<span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> err<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">spi1_wait_for_tx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token class-name">fsp_err_t</span> <span class="token function">spi_display_backlight_opt</span><span class="token punctuation">(</span><span class="token class-name">bsp_io_level_t</span> opt<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">fsp_err_t</span> err <span class="token operator">=</span> FSP_SUCCESS<span class="token punctuation">;</span>     <span class="token comment">// Error status</span>

    g_ioport<span class="token punctuation">.</span>p_api<span class="token operator">-&gt;</span><span class="token function">pinWrite</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ioport_ctrl_t</span> <span class="token operator">*</span> <span class="token keyword">const</span> <span class="token punctuation">)</span><span class="token operator">&amp;</span>g_ioport<span class="token punctuation">.</span>p_ctrl<span class="token punctuation">,</span> LCD_PWM_PIN<span class="token punctuation">,</span> opt<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token keyword">static</span> <span class="token class-name">fsp_err_t</span> <span class="token function">spi_display_reset</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">fsp_err_t</span> err <span class="token operator">=</span> FSP_SUCCESS<span class="token punctuation">;</span>     <span class="token comment">// Error status</span>

    g_ioport<span class="token punctuation">.</span>p_api<span class="token operator">-&gt;</span><span class="token function">pinWrite</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ioport_ctrl_t</span> <span class="token operator">*</span> <span class="token keyword">const</span> <span class="token punctuation">)</span><span class="token operator">&amp;</span>g_ioport<span class="token punctuation">.</span>p_ctrl<span class="token punctuation">,</span> LCD_RESET_PIN<span class="token punctuation">,</span> BSP_IO_LEVEL_LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">R_BSP_SoftwareDelay</span><span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">,</span> BSP_DELAY_UNITS_MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//延时120ms</span>
    g_ioport<span class="token punctuation">.</span>p_api<span class="token operator">-&gt;</span><span class="token function">pinWrite</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ioport_ctrl_t</span> <span class="token operator">*</span> <span class="token keyword">const</span> <span class="token punctuation">)</span><span class="token operator">&amp;</span>g_ioport<span class="token punctuation">.</span>p_ctrl<span class="token punctuation">,</span> LCD_RESET_PIN<span class="token punctuation">,</span> BSP_IO_LEVEL_HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">R_BSP_SoftwareDelay</span><span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">,</span> BSP_DELAY_UNITS_MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//延时120ms</span>

    <span class="token keyword">return</span> err<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在e2studio中点击打开 <code>02_dshanmcu_ra6m5_spi_display\\dshanmcu_ra6m5\\drivers\\drv_spi_display.h</code> 添加下面的代码：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">DRV_SPI_DISPLAY_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">DRV_SPI_DISPLAY_H</span></span>

<span class="token comment">/***********************************************************************************************************************
 * Includes
 **********************************************************************************************************************/</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;hal_data.h&quot;</span></span>

<span class="token comment">/**********************************************************************************************************************
 * Macro definitions
 **********************************************************************************************************************/</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">LCD_SCREEN_WIDTH</span>        <span class="token expression"><span class="token punctuation">(</span><span class="token number">320</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">LCD_SCREEN_HEIGHT</span>       <span class="token expression"><span class="token punctuation">(</span><span class="token number">480</span><span class="token punctuation">)</span></span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">LCD_COLOR_RED</span>           <span class="token expression"><span class="token punctuation">(</span><span class="token number">0xF800</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">LCD_COLOR_GREEN</span>         <span class="token expression"><span class="token punctuation">(</span><span class="token number">0x07E0</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">LCD_COLOR_BLUE</span>          <span class="token expression"><span class="token punctuation">(</span><span class="token number">0x001F</span><span class="token punctuation">)</span></span></span>

<span class="token comment">/**********************************************************************************************************************
 * Typedef definitions
 **********************************************************************************************************************/</span>

<span class="token comment">/***********************************************************************************************************************
 * Exported global variables
 **********************************************************************************************************************/</span>

<span class="token comment">/***********************************************************************************************************************
 * Exported global functions (to be accessed by other files)
 **********************************************************************************************************************/</span>

<span class="token class-name">fsp_err_t</span> <span class="token function">drv_spi_display_init</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">spi_display_set_window</span><span class="token punctuation">(</span><span class="token class-name">uint16_t</span> x1<span class="token punctuation">,</span> <span class="token class-name">uint16_t</span> y1<span class="token punctuation">,</span> <span class="token class-name">uint16_t</span> x2<span class="token punctuation">,</span> <span class="token class-name">uint16_t</span> y2<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">fsp_err_t</span> <span class="token function">drv_spi_display_flush_data</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token operator">*</span> data<span class="token punctuation">,</span> <span class="token class-name">uint32_t</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">/*DRV_SPI_DISPLAY_H*/</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-4-编写app" tabindex="-1"><a class="header-anchor" href="#_4-4-编写app" aria-hidden="true">#</a> 4.4 编写app</h2><p>在 <code>02_dshanmcu_ra6m5_spi_display\\dshanmcu_ra6m5\\applications</code> 目录下新建 <code>app_spi_display_test.c</code> 文件，如下图所示：</p><p><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-4/chapter-4_014.png" alt="chapter-4_014"></p><p>打开 <code>app_spi_display_test.c</code> 添加如下代码：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/***********************************************************************************************************************
 * Includes
 **********************************************************************************************************************/</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;app.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;drv_uart.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;drv_spi_display.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>

<span class="token comment">/**********************************************************************************************************************
 * Macro definitions
 **********************************************************************************************************************/</span>

<span class="token comment">/**********************************************************************************************************************
 * Typedef definitions
 **********************************************************************************************************************/</span>


<span class="token comment">/***********************************************************************************************************************
 * Private function prototypes
 **********************************************************************************************************************/</span>
<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">spi_display_show_color</span><span class="token punctuation">(</span><span class="token class-name">uint16_t</span> color_le<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/***********************************************************************************************************************
 * Private global variables
 **********************************************************************************************************************/</span>

<span class="token comment">/***********************************************************************************************************************
 * Functions
 **********************************************************************************************************************/</span>
<span class="token keyword">void</span> <span class="token function">app_spi_display_test</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">fsp_err_t</span> err<span class="token punctuation">;</span>

    err <span class="token operator">=</span> <span class="token function">drv_uart_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>FSP_SUCCESS <span class="token operator">!=</span> err<span class="token punctuation">)</span> <span class="token function">__BKPT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    err <span class="token operator">=</span> <span class="token function">drv_spi_display_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>FSP_SUCCESS <span class="token operator">!=</span> err<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;%s %d\\r\\n&quot;</span><span class="token punctuation">,</span> __FUNCTION__<span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">__BKPT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">spi_display_show_color</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint16_t</span><span class="token punctuation">)</span>LCD_COLOR_RED<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;Full screen display in red\\r\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">R_BSP_SoftwareDelay</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> BSP_DELAY_UNITS_MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//延时500ms</span>

        <span class="token function">spi_display_show_color</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint16_t</span><span class="token punctuation">)</span>LCD_COLOR_GREEN<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;Full screen display in green\\r\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">R_BSP_SoftwareDelay</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> BSP_DELAY_UNITS_MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//延时500ms</span>

        <span class="token function">spi_display_show_color</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint16_t</span><span class="token punctuation">)</span>LCD_COLOR_BLUE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;Full screen display in blue\\r\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">R_BSP_SoftwareDelay</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> BSP_DELAY_UNITS_MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//延时500ms</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>


<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">spi_display_show_color</span><span class="token punctuation">(</span><span class="token class-name">uint16_t</span> color_le<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">uint8_t</span> color_be<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    color_be <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span>color_le <span class="token operator">&amp;</span> <span class="token number">0xff00</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    color_be <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">uint8_t</span><span class="token punctuation">)</span><span class="token punctuation">(</span>color_le <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">spi_display_set_window</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> LCD_SCREEN_WIDTH<span class="token punctuation">,</span> LCD_SCREEN_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">uint16_t</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span> LCD_SCREEN_WIDTH<span class="token punctuation">;</span> x<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">uint16_t</span> y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> y <span class="token operator">&lt;</span> LCD_SCREEN_HEIGHT<span class="token punctuation">;</span> y<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token function">drv_spi_display_flush_data</span><span class="token punctuation">(</span>color_be<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">/***********************************************************************************************************************
 * Private Functions
 **********************************************************************************************************************/</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将 <code>app.h</code> 改为如下代码：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">APP_TEST_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">APP_TEST_H</span></span>

<span class="token comment">/***********************************************************************************************************************
 * Includes
 **********************************************************************************************************************/</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;hal_data.h&quot;</span></span>

<span class="token comment">/**********************************************************************************************************************
 * Macro definitions
 **********************************************************************************************************************/</span>

<span class="token comment">/**********************************************************************************************************************
 * Typedef definitions
 **********************************************************************************************************************/</span>

<span class="token comment">/***********************************************************************************************************************
 * Exported global variables
 **********************************************************************************************************************/</span>

<span class="token comment">/***********************************************************************************************************************
 * Exported global functions (to be accessed by other files)
 **********************************************************************************************************************/</span>

<span class="token keyword">void</span> <span class="token function">app_uart_test</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">app_i2c_touchpad_test</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">app_spi_display_test</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">/*APP_TEST_H*/</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-5-调用app" tabindex="-1"><a class="header-anchor" href="#_4-5-调用app" aria-hidden="true">#</a> 4.5 调用app</h2><p>打开 <code>02_dshanmcu_ra6m5_spi_display\\src\\hal_entry.c</code> ，按照如下步骤进行修改：</p><p>将 <code>hal_entry</code> 函数修改为如下所示的代码：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">hal_entry</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">/* TODO: add your own code here */</span>
    <span class="token comment">//app_uart_test();</span>
    <span class="token comment">//app_i2c_touchpad_test();</span>
    <span class="token function">app_spi_display_test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">BSP_TZ_SECURE_BUILD</span></span>
    <span class="token comment">/* Enter non-secure code */</span>
    <span class="token function">R_BSP_NonSecureEnter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-6-验证效果" tabindex="-1"><a class="header-anchor" href="#_4-6-验证效果" aria-hidden="true">#</a> 4.6 验证效果</h2><p>点击编译按钮，再点击 debug 按钮，将程序烧写到开发板中。会看到屏幕依次循环刷红、绿、蓝三种颜色。</p><h2 id="【拓展】为什么要交换rgb565颜色数据两个字节的顺序" tabindex="-1"><a class="header-anchor" href="#【拓展】为什么要交换rgb565颜色数据两个字节的顺序" aria-hidden="true">#</a> 【拓展】为什么要交换RGB565颜色数据两个字节的顺序</h2><p><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/lvgl_port_special_tutorial/chapter-4/chapter-4_015.png" alt="chapter-4_015"></p>`,69),r=l("div",{STYLE:"page-break-after: always;"},null,-1);function d(m,_){const n=a("center");return p(),t("div",null,[k,e(n,null,{default:c(()=>[o("本节完")]),_:1}),r])}const b=s(u,[["render",d],["__file","chapter4.html.vue"]]);export{b as default};
